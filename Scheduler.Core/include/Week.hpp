#ifndef WEEK_H
#define WEEK_H

#include "Day.hpp"
#include <vector>
#include <functional>

/*
 * ---------------------------------------------------------------------------------------------------- 
 * Week
 *  Summary: Collection of 7 consecutive days.
 * ---------------------------------------------------------------------------------------------------- 
 */
namespace Scheduler {
    namespace Core {

        class Week {
        public:
            /*
             * ---------------------------------------------------------------------------------------- 
             * Week Constructor
             * ---------------------------------------------------------------------------------------- 
             */
            Week();
            Week(const Day& first_day_of_the_week);

            /*
             * ---------------------------------------------------------------------------------------- 
             * Week Deconstructor
             * ---------------------------------------------------------------------------------------- 
             */
            ~Week();


            /*
             * ---------------------------------------------------------------------------------------- 
             * Get Methods
             * ---------------------------------------------------------------------------------------- 
             */
            std::vector< std::reference_wrapper<Day> > GetDays();
            std::vector<Day> GetDaysCopy() const;
            Day GetFirstDay() const;
            Day GetLastDay() const;

            /*
             * ---------------------------------------------------------------------------------------- 
             * Set Methods
             * ---------------------------------------------------------------------------------------- 
             */
            void SetDays(const Day& first_day_of_the_week);

        private:
            Day first_day;
            Day last_day;
            std::vector<Day> days;
        };
    }
}

#endif // WEEK_H
